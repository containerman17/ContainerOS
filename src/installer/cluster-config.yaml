version: "3.7"

services:
  <%#IS_PROD%>
  api:
    image: quay.io/containeros/api:latest
    networks:
      - containeros-system
      - caddy
    deploy:
      labels:
        caddy: <%API_HOST%>
        caddy.reverse_proxy: "{{upstreams 8080}}"
      placement:
        constraints:
          - "node.role==manager"
    secrets:
      - root_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock    
      - /root/.docker/:/root/.docker/

  node-setup:
    image: quay.io/containeros/node-setup
    networks:
      - containeros-system
    deploy:
      mode: global
    secrets:
      - root_token
    environment:
      - API_HOST=<%API_HOST%>
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/:/root/.docker/
  <%/IS_PROD%>

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  registry: 
    image: registry:2
    networks:
      - containeros-system
    <%#IS_DEV%>
    ports:
      - 5000:5000
      - 5001:5001
    <%/IS_DEV%>
    environment:
      REGISTRY_STORAGE_S3_ACCESSKEY: <%REGISTRY_STORAGE_S3_ACCESSKEY%>
      REGISTRY_STORAGE_S3_SECRETKEY: <%REGISTRY_STORAGE_S3_SECRETKEY%>
      REGISTRY_STORAGE_S3_BUCKET: <%REGISTRY_STORAGE_S3_BUCKET%>
      REGISTRY_STORAGE_S3_REGIONENDPOINT: <%REGISTRY_STORAGE_S3_REGIONENDPOINT%>
      REGISTRY_STORAGE_S3_REGION: <%REGISTRY_STORAGE_S3_REGION%>
      REGISTRY_HTTP_ADDR: "0.0.0.0:5000"
      REGISTRY_STORAGE: s3
      REGISTRY_HTTP_DEBUG_ADDR: "0.0.0.0:5001"

  consul1:
    environment:
      CONSUL_BIND_INTERFACE: eth0
    image: consul:1.10.0
    networks:
      - containeros-system
    command: "agent -server --client 0.0.0.0 -datacenter=main -bootstrap-expect=3 -encrypt=NToZ3N7SjUSu3Wo3zzljo14hBFzzFR1n1HoZl7gzyko= -retry-join=consul1 -retry-join=consul2 -retry-join=consul3"

  consul2:
    environment:
      CONSUL_BIND_INTERFACE: eth0
    image: consul:1.10.0
    <%#IS_DEV%>
    ports:
      - 8500:8500
    <%/IS_DEV%>
    networks:
      - containeros-system
    command: "agent -server -ui --client 0.0.0.0 -datacenter=main -bootstrap-expect=3 -encrypt=NToZ3N7SjUSu3Wo3zzljo14hBFzzFR1n1HoZl7gzyko= -retry-join=consul1 -retry-join=consul2 -retry-join=consul3"

  consul3:
    environment:
      CONSUL_BIND_INTERFACE: eth0
    image: consul:1.10.0
    networks:
      - containeros-system
    command: "agent -server --client 0.0.0.0 -datacenter=main -bootstrap-expect=3 -encrypt=NToZ3N7SjUSu3Wo3zzljo14hBFzzFR1n1HoZl7gzyko= -retry-join=consul1 -retry-join=consul2 -retry-join=consul3"

networks:
  containeros-system:
  caddy:
    external: true

volumes:
  caddy_data: {}


secrets:
  root_token:
    external: true